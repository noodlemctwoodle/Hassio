# Hassio Verison
  - platform: version
  
# Time  
  - platform: time_date
    display_options:
      - 'time'

# Unifi Gateway
  - platform: unifigateway
    host: !secret unifi_host
    username: !secret unifi_username
    password: !secret unifi_password
    monitored_conditions:
      - lan
      - wlan
      - alerts
      - firmware

## Wireless Template
  - platform: template
    sensors:
      unifi_gateway_connected_wifi_users:
        friendly_name: 'Wireless Clients'
        value_template: "{{ state_attr('sensor.unifi_gateway_wlan', 'num_user')}}"

  - platform: template
    sensors:
      unifi_gateway_connected_wifi_guests:
        friendly_name: 'Wireless Clients'
        value_template: "{{ state_attr('sensor.unifi_gateway_wlan', 'num_guest')}}"

## LAN Tamplate
  - platform: template
    sensors:
      unifi_gateway_tx_lan:
        friendly_name: 'Send'
        value_template: "{{ state_attr('sensor.unifi_gateway_lan', 'tx_bytes-r') | filesizeformat()}}" 


  - platform: template
    sensors:
      unifi_gateway_rx_lan:
        friendly_name: 'Receive'
        value_template: "{{ state_attr('sensor.unifi_gateway_lan', 'rx_bytes-r') | filesizeformat()}}" 


# Google Ping Sensor
  - platform: template
    sensors:
      google_dns_ping:
        friendly_name: 'Ping'
        entity_id:
          - binary_sensor.google_dns_ping
        value_template: "{{ state_attr('binary_sensor.google_dns_ping', 'round_trip_time_avg') | round(2) }}"
        unit_of_measurement: "ms"

# Docker Host Sensors
  - platform: netdata
    host: !secret docker_ip
    port: !secret docker_port
    name: chsdoc01
    resources:    
      core0_freq:
        data_group: 'cpu.cpufreq'
        element: 'cpu0'
        icon: mdi:chip
      core1_freq:
        data_group: 'cpu.cpufreq'
        element: 'cpu1'
        icon: mdi:chip
      core2_freq:
        data_group: 'cpu.cpufreq'
        element: 'cpu2'
        icon: mdi:chip
      core3_freq:
        data_group: 'cpu.cpufreq'
        element: 'cpu3'
        icon: mdi:chip
      system_load:
        data_group: 'system.load'
        element: 'load15'
        icon: mdi:chip
      core_temp:
        data_group: 'sensors.pch_skylake-virtual-0_temperature'
        element: 'pch_skylake-virtual-0_temp1'
        icon: mdi:thermometer-lines
      mem_avail:
        data_group: 'mem.available'
        element: 'MemAvailable'
        icon: mdi:chip
      system_swap:
        data_group: 'system.swap'
        element: 'used'
        icon: mdi:chip
      lan_in:
        data_group: 'net.eno1'
        element: 'received'
        icon: mdi:lan-pending
      lan_out:
        data_group: 'net.eno1'
        element: 'sent'
        icon: mdi:lan-pending
      up:
        data_group: 'system.uptime'
        element: 'uptime'
        icon: mdi:update

  - platform: template
    sensors:
      chsdoc01_uptime:
        friendly_name: 'Docker Host Uptime'
        value_template: >-
          {% set time = (states.sensor.chsdoc01_up.state | int) | int %}
          {% set minutes = ((time % 3600) / 60) | int %}
          {% set hours = ((time % 86400) / 3600) | int %}
          {% set days = (time / 86400) | int %}
        
          {%- if time < 60 -%}
            Less than a minute
            {%- else -%}
            {%- if days > 0 -%}
              {{ days }}d
            {%- endif -%}
            {%- if hours > 0 -%}
              {%- if days > 0 -%}
                {{ ' ' }}
              {%- endif -%}
              {{ hours }}h
            {%- endif -%}
            {%- if minutes > 0 -%}
              {%- if days > 0 or hours > 0 -%}
                {{ ' ' }}
              {%- endif -%}
              {{ minutes }}m
            {%- endif -%}
          {%- endif -%}

  - platform: template
    sensors:
      chsdoc01_lan_inbound:
        friendly_name: 'LAN Inbound'
        unit_of_measurement: 'Mb/s'
        value_template: "{{ states('sensor.chsdoc01_lan_in') | float | round() | float / 1000 }}"

  - platform: template
    sensors:
      chsdoc01_lan_outbound:
        friendly_name: 'LAN Outbound'
        unit_of_measurement: 'Mb/s'
        value_template: "{{ states('sensor.chsdoc01_lan_out') | float | round() | float / 1000 }}"

# PFSense Sensors
  - platform: netdata
    host: !secret pfsense_ip
    port: !secret pfsense_port
    name: chspfs01
    resources:    
      system_load:
        data_group: 'system.load'
        element: 'load15'
        icon: mdi:chip
      up:
        data_group: 'system.uptime'
        element: 'uptime'
        icon: mdi:update
      core_freq:
        data_group: 'cpu.scaling_cur_freq'
        element: 'frequency'
        icon: mdi:chip
      core_temp_0:
        data_group: 'cpu.temperature'
        element: 'cpu0.temp'
        icon: mdi:thermometer-lines
      core_temp_1:
        data_group: 'cpu.temperature'
        element: 'cpu1.temp'
        icon: mdi:thermometer-lines
      mem_commit:
        data_group: 'mem.committed'
        element: 'Committed_AS'
        icon: mdi:chip
      disk_used:
        data_group: 'disk_space./'
        element: 'used'
        icon: mdi:harddisk
      disk_avail:
        data_group: 'disk_space./'
        element: 'avail'
        icon: mdi:harddisk
      system_swap:
        data_group: 'system.swap'
        element: 'used'
        icon: mdi:chip
      wan_in:
        data_group: 'net.em0'
        element: 'received'
        icon: mdi:lan-pending
      wan_out:
        data_group: 'net.em0'
        element: 'sent'
        icon: mdi:lan-pending
      vlan20_in:
        data_group: 'net.lagg0.20'
        element: 'received'
        icon: mdi:lan-pending
      vlan20_out:
        data_group: 'net.lagg0.20'
        element: 'sent'
        icon: mdi:lan-pending
      vlan200_in:
        data_group: 'net.lagg0.200'
        element: 'received'
        icon: mdi:lan-pending
      vlan200_out:
        data_group: 'net.lagg0.200'
        element: 'sent'
        icon: mdi:lan-pending

  - platform: template
    sensors:
      chspfs01_vlan20_inbound:
        friendly_name: 'LAN Inbound'
        unit_of_measurement: 'Mb/s'
        value_template: "{{ states('sensor.chspfs01_vlan20_in') | float | round() | float / 1000 }}"

  - platform: template
    sensors:
      chspfs01_vlan20_outbound:
        friendly_name: 'LAN Outbound'
        unit_of_measurement: 'Mb/s'
        value_template: "{{ states('sensor.chspfs01_vlan20_out') | float | round() | float * 1000 }}"

  - platform: template
    sensors:
      chspfs01_uptime:
        friendly_name: 'PFSense Uptime'
        value_template: >-
          {% set time = (states.sensor.chspfs01_up.state | int) | int %}
          {% set minutes = ((time % 3600) / 60) | int %}
          {% set hours = ((time % 86400) / 3600) | int %}
          {% set days = (time / 86400) | int %}
        
          {%- if time < 60 -%}
            Less than a minute
            {%- else -%}
            {%- if days > 0 -%}
              {{ days }}d
            {%- endif -%}
            {%- if hours > 0 -%}
              {%- if days > 0 -%}
                {{ ' ' }}
              {%- endif -%}
              {{ hours }}h
            {%- endif -%}
            {%- if minutes > 0 -%}
              {%- if days > 0 or hours > 0 -%}
                {{ ' ' }}
              {%- endif -%}
              {{ minutes }}m
            {%- endif -%}
          {%- endif -%}

# Unifi Cloud Key Gen 2 Plus Sensors
  - platform: netdata
    host: !secret cloud_key_ip
    port: !secret cloud_key_port
    name: chsuni01
    resources:    
      core0_freq:
        data_group: 'cpu.cpufreq'
        element: 'cpu0'
        icon: mdi:chip
      core1_freq:
        data_group: 'cpu.cpufreq'
        element: 'cpu1'
        icon: mdi:chip
      core2_freq:
        data_group: 'cpu.cpufreq'
        element: 'cpu2'
        icon: mdi:chip
      core3_freq:
        data_group: 'cpu.cpufreq'
        element: 'cpu3'
        icon: mdi:chip
      core4_freq:
        data_group: 'cpu.cpufreq'
        element: 'cpu4'
        icon: mdi:chip
      core5_freq:
        data_group: 'cpu.cpufreq'
        element: 'cpu5'
        icon: mdi:chip
      core6_freq:
        data_group: 'cpu.cpufreq'
        element: 'cpu6'
        icon: mdi:chip
      core7_freq:
        data_group: 'cpu.cpufreq'
        element: 'cpu7'
        icon: mdi:chip
      builtin_disk_used:
        data_group: 'disk_space._'
        element: 'used'
        icon: mdi:harddisk
      builtin_disk_avail:
        data_group: 'disk_space._'
        element: 'avail'
        icon: mdi:harddisk
      hdd_used:
        data_group: 'disk_space._srv'
        element: 'used'
        icon: mdi:harddisk
      hdd_avail:
        data_group: 'disk_space._srv'
        element: 'avail'
        icon: mdi:harddisk
      system_load:
        data_group: 'system.load'
        element: 'load15'
        icon: mdi:chip
      mem_avail:
        data_group: 'mem.available'
        element: 'MemAvailable'
        icon: mdi:chip
      system_swap:
        data_group: 'system.swap'
        element: 'used'
        icon: mdi:chip
      lan_in:
        data_group: 'system.net'
        element: 'InOctets'
        icon: mdi:lan-pending
      lan_out:
        data_group: 'system.net'
        element: 'OutOctets'
        icon: mdi:lan-pending
      up:
        data_group: 'system.uptime'
        element: 'uptime'
        icon: mdi:update
      battery:
        data_group: 'powersupply_capacity.battery'
        element: 'capacity'
        icon: mdi:battery-charging-100

  - platform: template
    sensors:
      chsuni01_lan_inbound:
        friendly_name: 'LAN Inbound'
        unit_of_measurement: 'Mb/s'
        value_template: "{{ states('sensor.chsuni01_lan_in') | float | round() | float / 1000 }}"

  - platform: template
    sensors:
      chsuni01_lan_outbound:
        friendly_name: 'LAN Outbound'
        unit_of_measurement: 'Mb/s'
        value_template: "{{ states('sensor.chsuni01_lan_out') | float | round() | float * 1000 }}"

  - platform: template
    sensors:
      chsuni01_uptime:
        friendly_name: 'Unifi Cloud Key Uptime'
        value_template: >-
          {% set time = (states.sensor.chsuni01_up.state | int) | int %}
          {% set minutes = ((time % 3600) / 60) | int %}
          {% set hours = ((time % 86400) / 3600) | int %}
          {% set days = (time / 86400) | int %}
        
          {%- if time < 60 -%}
            Less than a minute
            {%- else -%}
            {%- if days > 0 -%}
              {{ days }}d
            {%- endif -%}
            {%- if hours > 0 -%}
              {%- if days > 0 -%}
                {{ ' ' }}
              {%- endif -%}
              {{ hours }}h
            {%- endif -%}
            {%- if minutes > 0 -%}
              {%- if days > 0 or hours > 0 -%}
                {{ ' ' }}
              {%- endif -%}
              {{ minutes }}m
            {%- endif -%}
          {%- endif -%}
